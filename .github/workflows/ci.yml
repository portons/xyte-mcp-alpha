name: CI

on:
  push:
    branches: [ main ]
    tags: ['v*']
  pull_request:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: pip install ruff
      - run: ruff check src tests
      - run: pip install bandit
      - run: bandit -r src -ll

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: pip install mypy
      - run: mypy src

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        xyte_key: ["dummy", ""]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          pip install .
          pip install pytest
      - name: Set env
        run: |
          echo "PYTHONPATH=$PWD" >> $GITHUB_ENV
          echo "XYTE_API_KEY=${{ matrix.xyte_key }}" >> $GITHUB_ENV
          echo "XYTE_ENV=test" >> $GITHUB_ENV
      - run: pytest

  build:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [lint, typecheck, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: push
        run: |
          docker build -t ghcr.io/${{ github.repository }}:${{ github.ref_name }} .
          docker push ghcr.io/${{ github.repository }}:${{ github.ref_name }}
          digest=$(docker inspect --format='{{index .RepoDigests 0}}' ghcr.io/${{ github.repository }}:${{ github.ref_name }})
          echo "digest=$digest" >> $GITHUB_OUTPUT

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: aquasecurity/trivy-action@v0.20.0
        with:
          scan-type: 'fs'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'

